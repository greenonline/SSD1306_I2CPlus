/*
   ScrollCommandStream.ino
   Sketch to demonstrate scrolling on the OLED, 
   using "command streams", i.e. sendCommand().

   Derived from the ScrollDisplay.ino example from SSD1306_I2C, 
   but modified to show landscape bitmap instead.
   As well as the scroll methods, raw command bytes are also used to the same effect.
   Test sketch - does the white background still occur for 1-pixel scrolls?

   Created Aug 2, 2025
*/

//#include <SSD1306_I2C.h>   // You can use the original library to send the new commands
#include <SSD1306_I2CPlus.h> // Only needed for the method wrappers for the new commands
#include <Wire.h>

//SSD1306 display;           // You can use the original library to send the new commands
SSD1306Plus display;         // Only needed for the method wrappers for the new commands

// Define bitmap of a landscape (must be placed in PROGMEM)
// Generated from https://javl.github.io/image2cpp/
// 'Landscape', 128x64px
const unsigned char image[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xc1, 0x80, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x03, 0x00, 0x80, 0x00, 0x0f, 0x8e, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,
  0x00, 0x0e, 0x00, 0xc0, 0x00, 0x18, 0xf8, 0x30, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc8, 0xf0, 0x00,
  0x00, 0x18, 0x00, 0x60, 0x00, 0x30, 0x60, 0x10, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x0d, 0x08, 0x00,
  0x00, 0x30, 0x00, 0x20, 0x00, 0x20, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x07, 0x0c, 0x00,
  0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x10, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x04, 0x00,
  0x00, 0x40, 0x00, 0x40, 0x00, 0xc0, 0x00, 0x30, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x8c, 0x00,
  0x00, 0x20, 0x00, 0xc0, 0x01, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x80, 0x01, 0x80, 0x78, 0x00,
  0x00, 0x20, 0x20, 0x80, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x30, 0x00,
  0x00, 0x18, 0x31, 0x80, 0x01, 0x20, 0x00, 0x18, 0x00, 0x00, 0x00, 0xc0, 0x05, 0x00, 0x20, 0x00,
  0x00, 0x0c, 0x6b, 0x00, 0x01, 0xc0, 0x00, 0x08, 0x00, 0x00, 0x00, 0x60, 0x01, 0x80, 0x60, 0x00,
  0x00, 0x03, 0x8e, 0x00, 0x00, 0x80, 0x10, 0x08, 0x00, 0x00, 0x00, 0x40, 0x03, 0xc1, 0xc0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x18, 0x18, 0x00, 0x00, 0x00, 0x60, 0x0e, 0x7f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x38, 0x70, 0x00, 0x00, 0x00, 0x3e, 0xf8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc1, 0xec, 0xc0, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
  0x00, 0x00, 0x03, 0x88, 0x00, 0x03, 0xff, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x18, 0x00,
  0x00, 0x00, 0x06, 0x08, 0x00, 0x06, 0x00, 0x80, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x38, 0x00,
  0x80, 0x00, 0x0c, 0x0f, 0x00, 0x0c, 0x00, 0xc0, 0x00, 0x02, 0x1f, 0x80, 0x00, 0x01, 0xe8, 0x00,
  0xe0, 0x00, 0x78, 0x00, 0xe0, 0x18, 0x00, 0x40, 0x00, 0x06, 0x00, 0xc0, 0x00, 0x03, 0x0c, 0x01,
  0x20, 0x00, 0xc0, 0x00, 0x30, 0x30, 0x00, 0x40, 0x00, 0x04, 0x00, 0x40, 0x00, 0x0c, 0x07, 0xc3,
  0x30, 0x03, 0x00, 0x00, 0x0c, 0x60, 0x00, 0x20, 0x00, 0x0c, 0x00, 0x40, 0x00, 0x18, 0x00, 0x76,
  0x10, 0x02, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x20, 0x00, 0x18, 0x00, 0x7c, 0x00, 0x30, 0x00, 0x1c,
  0x18, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x30, 0x00, 0x07, 0x80, 0x20, 0x00, 0x04,
  0x0f, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x60, 0x00, 0x00, 0xc0, 0x20, 0x00, 0x00,
  0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xc0, 0x00, 0x00, 0x20, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x01, 0x80, 0x00, 0x00, 0x1f, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x18, 0x3c, 0x0e, 0x03, 0x0c, 0x00, 0x1c, 0x00, 0x00, 0x3f, 0x8e, 0x00, 0x07, 0xe0, 0x1e, 0x00,
  0x2e, 0x63, 0xb9, 0xce, 0x04, 0x67, 0xe6, 0xe0, 0x00, 0x60, 0xcf, 0x00, 0x6d, 0xf8, 0x73, 0x80,
  0xe3, 0xc0, 0xe0, 0x78, 0x07, 0xfc, 0x03, 0xbe, 0x01, 0xc0, 0x79, 0xfd, 0xf8, 0xcf, 0xc0, 0xff,
  0x41, 0x80, 0x40, 0x30, 0x00, 0x18, 0x03, 0x03, 0xff, 0x00, 0x19, 0x87, 0x00, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};



void setup() {
  Wire.begin();
  display.begin(0x3C);
}

void loop() {
  theBusiness();
}

void theBusiness(){
  // Print the word "scroll" three times
  /*
  display.setTextSize(2);
  display.setCursor(0, 0);
  display.println("scroll", HIGH);
  display.println("scroll", HIGH);
  display.println("scroll", HIGH);
  display.updateDisplay();
  */

  display.displayBitmapImage(image, 0, 0, 128, 64);
  display.updateDisplay();


  // Horizontal scroll left, scroll pages 0-7, 2 frames interval
  display.setupScrollH(LEFT, 0, 7, FRAMES_2);
  display.startScroll();  // Begin scroll
  delay(2000);            // Scroll for 2 seconds
  display.stopScroll();   // Stop scrolling
  delay(500);             // Wait half a second between scrolling

  // Horizontal scroll right, scroll pages 0-7, 2 frames interval
  display.setupScrollH(RIGHT, 0, 7, FRAMES_2);
  display.startScroll();
  delay(2000);
  display.stopScroll();
  delay(500);

  // Vertical+horizontal scroll left and up, scroll pages 0-7, 2 frames interval
  display.setupScrollHV(LEFT, UP, 0, 7, FRAMES_2);
  display.startScroll();
  delay(2000);
  display.stopScroll();
  delay(500);

  // Vertical+horizontal scroll right and down, scroll pages 0-7, 2 frames interval
  display.setupScrollHV(RIGHT, DOWN, 0, 7, FRAMES_2);
  display.startScroll();
  delay(2000);
  display.stopScroll();
  delay(500);

  // Only scroll first two pages
  /*
  display.clear();
  display.setCursor(0, 0);
  display.println("scroll", HIGH);
  display.print("no scroll", HIGH);
  display.updateDisplay();
  delay(500);
  */

  display.displayBitmapImage(image, 0, 0, 128, 64);
  display.updateDisplay();

  // Horizontal scroll left, scroll pages 0-2, 2 frames interval
  display.setupScrollH(LEFT, 0, 2, FRAMES_2);
  display.startScroll();
  delay(2000);
  display.stopScroll();


  // Up to this point everything works well
  //
  // Now try a loop of 20 right 1-pixel scrolls
  // Using the scroll method
  // This "fails" - white background
  //

  int i;
  int wait_time = 20;

  for (i = 0; i < 20; i++) {
    display.setupScrollHOne(RIGHT, 0, 7, FRAMES_2);  // FRAMES_2 causes white background
    //display.setupScrollHOne(RIGHT, 0, 7, FRAMES_5);    // FRAMES_5 no white background
    //display.startScroll();  // Begin scroll - not required for 1-pixel scroll
    delay(wait_time);         // Wait a while between scrolling
  }

  //
  // Wobble - left
  // This "fails" - white background
  //

  for (i = 0; i < 10; i++) {
    display.setupScrollHOne(LEFT, 0, 7, FRAMES_2);  // FRAMES_2 causes white background
    //display.setupScrollHOne(LEFT, 0, 7, FRAMES_5);    // FRAMES_5 no white background
    //display.startScroll();  // Begin scroll - not required for 1-pixel scroll
    delay(wait_time);         // Wait a while between scrolling
  }

  //
  // Wobble - right
  // This "fails" - white background
  //

  for (i = 0; i < 10; i++) {
    display.setupScrollHOne(RIGHT, 0, 7, FRAMES_2);  // FRAMES_2 causes white background
    //display.setupScrollHOne(RIGHT, 0, 7, FRAMES_5);    // FRAMES_5 no white background
    //display.startScroll();  // Begin scroll - not required for 1-pixel scroll
    delay(wait_time);         // Wait a while between scrolling
  }

  //
  // Now scroll "properly" with wrap-around,
  //    a loop of 20 right 1-pixel scrolls
  // Using the scroll method
  //

  display.displayBitmapImage(image, 0, 0, 128, 64);
  display.updateDisplay();

  for (i = 0; i < 20; i++) {
    //display.setupScrollHOne(RIGHT, 0, 7, FRAMES_2);  // FRAMES_2 causes white background
    display.setupScrollHOne(RIGHT, 0, 7, FRAMES_5);    // FRAMES_5 no white background
    //display.startScroll();  // Begin scroll - not required for 1-pixel scroll
    delay(wait_time);         // Wait a while between scrolling
  }

  //
  // Wobble - left
  // This works - wrap-around
  //

  for (i = 0; i < 10; i++) {
    //display.setupScrollHOne(LEFT, 0, 7, FRAMES_2);  // FRAMES_2 causes white background
    display.setupScrollHOne(LEFT, 0, 7, FRAMES_5);    // FRAMES_5 no white background
    //display.startScroll();  // Begin scroll - not required for 1-pixel scroll
    delay(wait_time);         // Wait a while between scrolling
  }

  //
  // Wobble - right
  // This works - wrap-around
  //

  for (i = 0; i < 10; i++) {
    //display.setupScrollHOne(RIGHT, 0, 7, FRAMES_2);  // FRAMES_2 causes white background
    display.setupScrollHOne(RIGHT, 0, 7, FRAMES_5);    // FRAMES_5 no white background
    //display.startScroll();  // Begin scroll - not required for 1-pixel scroll
    delay(wait_time);         // Wait a while between scrolling
  }

  //
  // Quickly, temporarily make sure that normal scroll of first page still works
  //

  display.displayBitmapImage(image, 0, 0, 128, 64);
  display.updateDisplay();

  // Horizontal scroll left, scroll pages 0-2, 2 frames interval
  display.setupScrollH(LEFT, 0, 2, FRAMES_2);
  display.startScroll();
  delay(2000);
  display.stopScroll();


  //
  // Now re-do horizontal continous scroll, using sendCommand()
  //

  display.sendCommand(0x2E);  // stop scroll
  display.sendCommand(0x26);  // right scroll
  display.sendCommand(0x00);  // dummy 0x00
  display.sendCommand(0x00);  // start
  display.sendCommand(0x00);  // interval
  display.sendCommand(0x07);  // end
  display.sendCommand(0x00);  // dummy 0x00
  display.sendCommand(0xFF);  // dummy 0xFF
  display.sendCommand(0x2F);  // Start scroll

  delay(2000);

  //
  // Now re-do 20 x horizontal 1-pixel scroll, using sendCommand()
  //

  display.sendCommand(0x2E);  // stop scroll

  display.sendCommand(0x2D);  // left scroll one
  display.sendCommand(0x00);  // dummy 0x00
  display.sendCommand(0x00);  // start
  display.sendCommand(0x00);  // interval
  display.sendCommand(0x07);  // end
  display.sendCommand(0x00);  // dummy 0x00
  display.sendCommand(0xFF);  // dummy 0xFF
  //display.sendCommand(0x2F);       // Start scroll

  delay(wait_time);       // Wait a while between scrolling


  for (i = 0; i < 200; i++) {
    //display.sendCommand(0x2E);  // stop scroll       // <----- !!!Do not send stop scroll each time (causes white backgrnd)
                                                       // No, it does not cause white background, even with this line white bkgd occurs

    display.sendCommand(0x2D);  // left scroll one
    display.sendCommand(0x00);  // dummy 0x00
    display.sendCommand(0x00);  // start
    display.sendCommand(0x00);  // interval
    display.sendCommand(0x07);  // end
    display.sendCommand(0x00);  // dummy 0x00
    display.sendCommand(0xFF);  // dummy 0xFF
    delay(wait_time);       // Wait a while between scrolling
  }

  //
  // Now transplant the contents of the  1-pixel scroll method here directly,
  // for comparison with the above.
  //

  display.sendCommand(0x2C);
  display.sendCommand(0x00);
  display.sendCommand(0x00);
  display.sendCommand(0x00);  // <---- "Interval" needs to be zero, not used for 1-pixel
  display.sendCommand(0x0F);
  display.sendCommand(0x00);
  display.sendCommand(0xFF);
}
